import type { VercelRequest, VercelResponse } from '@vercel/node';
import { sql } from './_lib/db.js';
async function ensure(){ await sql`create table if not exists documents( id uuid primary key default gen_random_uuid(), client_id uuid references clients(id) on delete set null, code text unique, date date default current_date, subtotal numeric(12,2) default 0, vat numeric(12,2) default 0, total numeric(12,2) default 0, created_at timestamptz default now() );`; }
export default async function handler(req: VercelRequest, res: VercelResponse){ await ensure(); const {method, query}=req;
  if(method==='GET'){ if(query.id){ const r:any[] = await sql`select * from documents where id=${String(query.id)} limit 1;`; return res.status(200).json(r[0]??null);} const rows:any[] = await sql`select * from documents order by date desc, created_at desc limit 200;`; return res.status(200).json(rows); }
  if(method==='POST'){ const b=(req.body??{}) as any; const r:any[] = await sql`insert into documents(client_id, code, date, subtotal, vat, total) values (${b.client_id??null}, ${b.code??null}, ${b.date??null}, ${b.subtotal??0}, ${b.vat??0}, ${b.total??0}) returning *;`; return res.status(201).json(r[0]); }
  if(method==='PUT'){ const b=(req.body??{}) as any; if(!b.id) return res.status(400).json({message:'missing id'}); const r:any[] = await sql`update documents set client_id=${b.client_id??null}, code=${b.code??null}, date=${b.date??null}, subtotal=${b.subtotal??0}, vat=${b.vat??0}, total=${b.total??0} where id=${b.id} returning *;`; return res.status(200).json(r[0]); }
  if(method==='DELETE'){ const id=String((req.query.id ?? (req.body as any)?.id) ?? ''); if(!id) return res.status(400).json({message:'missing id'}); await sql`delete from documents where id=${id}`; return res.status(200).json({ok:true}); }
  return res.status(405).end(); }
